version: '3.8'
services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka-odms
    hostname: kafka
    restart: no
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  mysql:
    image: mysql:8.0
    container_name: mysql-odms
    hostname: mysql
    restart: no
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db-mysql.sql:/docker-entrypoint-initdb.d/init-db-mysql.sql:ro

  postgres:
    image: postgres:14
    container_name: postgres-odms
    hostname: postgres
    restart: no
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db-postgres.sql:/docker-entrypoint-initdb.d/init-db-postgres.sql:ro

  mongodb:
    image: mongo:6
    container_name: mongodb-odms
    hostname: mongo
    restart: no
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/init-db-mongo.js:/docker-entrypoint-initdb.d/init-db-mongo.js:ro

  redis:
    image: redis:7
    container_name: redis-odms
    hostname: redis
    restart: no
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  postgres_data:
  mongo_data:
  redis_data:
